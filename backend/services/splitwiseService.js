const { default: axios } = require("axios");
const express = require("express");
require("dotenv").config();
const fetch = require("node-fetch");

const getAuthURL = (req, res) => {
  const clientId = process.env.SPLITWISE_CLIENT_ID;
  const redirectUri = process.env.REDIRECT_URI;
  const authUrl = `https://secure.splitwise.com/oauth/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}`;
  return authUrl;
};

const getToken = async (code) => {
  const response = await axios.post(
    "https://secure.splitwise.com/oauth/token",
    null,
    {
      params: {
        grant_type: "authorization_code",
        client_id: process.env.SPLITWISE_CLIENT_ID,
        client_secret: process.env.SPLITWISE_CLIENT_SECRET,
        code,
        redirect_uri: process.env.REDIRECT_URI,
      },
    }
  );
  console.log("Response is ", response.data);
  return response.data;
};

const getCurrentUser = async (accessToken) => {
  const response = await axios.get(
    "https://secure.splitwise.com/api/v3.0/get_current_user",
    {
      headers: { Authorization: `Bearer ${accessToken}` },
    }
  );

  return response.data;
};

const postToSplitwise = async (
  groupId,
  description,
  totalCost,
  userShares,
  payerId,
  accessToken
) => {
  const payload = {
    cost: totalCost.toFixed(2),
    description,
    currency_code: "USD",
    group_id: groupId,
    repeat_interval: "never",
    details: "Generated by Splitwise Splitter",
  };

  let index = 0;
  for (const [userId, owed] of Object.entries(userShares)) {
    payload[`users__${index}__user_id`] = userId;
    payload[`users__${index}__paid_share`] =
      userId === payerId ? totalCost.toFixed(2) : "0.00";
    payload[`users__${index}__owed_share`] = owed.toFixed(2);
    index++;
  }

  try {
    const response = await fetch(
      "https://secure.splitwise.com/api/v3.0/create_expense",
      {
        method: "POST",
        headers: {
          Authorization: `Bearer ${accessToken}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      }
    );

    const data = await response.json();
    return data;
  } catch (error) {
    throw error;
  }
};

module.exports = { getAuthURL, getToken, getCurrentUser, postToSplitwise };
